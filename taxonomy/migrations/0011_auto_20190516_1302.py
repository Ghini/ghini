# Generated by Django 2.2 on 2019-05-16 13:02

from django.db import migrations


def noop(apps, schema_editor):
    pass


def import_genus_to_family(apps, schema_editor):
    # We can't import the model directly as it may be a newer version than
    # this migration expects. We use the historical version.
    Taxon = apps.get_model('taxonomy', 'Taxon')
    Rank = apps.get_model('taxonomy', 'Rank')
    rank = {name: Rank.objects.get(name=name)
            for name in ['genus', 'subtribus', 'tribus', 'subfamilia', 'familia']}
    import os
    print(os.getcwd())
    with open('taxonomy/migrations/0011_auto_20190516_1302.genus-to-family.txt', newline='') as f:
        while True:
            orig_epithet = next(f).strip()
            if not orig_epithet:
                break
            lines = []
            while True:
                line = next(f).strip()
                if not line:
                    break
                lines.append(line.split(':'))
            orig, _ = Taxon.objects.get_or_create(epithet=orig_epithet, rank=rank['genus'])
            for_sake_of_logging = [orig.epithet]
            acc_rank, acc_epithet = lines.pop()
            if acc_epithet != orig_epithet:
                accepted, _ = Taxon.objects.get_or_create(epithet=acc_epithet, rank=rank[acc_rank])
                orig.accepted = accepted
                orig.save()
                orig = accepted
                for_sake_of_logging.append("-->{}".format(orig.epithet))
            while lines:
                parent_rank, parent_epithet = lines.pop()
                parent, _ = Taxon.objects.get_or_create(epithet=parent_epithet, rank=rank[parent_rank])
                if orig.parent != parent:
                    orig.parent = parent
                    orig.save()
                orig = parent
                for_sake_of_logging.append(orig.epithet)
            print(", ".join(for_sake_of_logging))


class Migration(migrations.Migration):

    dependencies = [
        ('taxonomy', '0010_auto_20190508_2000'),
    ]

    operations = [
        migrations.RunPython(import_genus_to_family, noop),
    ]
